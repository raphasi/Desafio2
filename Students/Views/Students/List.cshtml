@model IEnumerable<Students.Models.Student>

@{
    ViewBag.Title = "Alunos Por Cursos";
    var course = (Students.Models.Course) ViewBag.Course; 
}

<h2>Alunos por Curos</h2>

<fieldset>
    <legend>Detalhes do Curso</legend>
    <table>
        <tr>
            <td class="colhead">Código  </td>
            <td> @course.Code </td>
        </tr>
        <tr>
            <td class="colhead">Assunto </td>
            <td> @course.Subjects.Title </td>
        </tr>

        <tr>
            <td class="colhead">Data de Início </td>
            <td>@course.StartDate.ToString("dd/MM/yyyy") </td>
        </tr>

        <tr>
            <td class="colhead">Horário</td>
            <td>@course.Timing </td>
        </tr>
        <tr>
            <td class="colhead">Observação</td>
            <td>@course.Remarks </td>
        </tr>

    </table>
   
</fieldset>

    <p>
        @Html.ActionLink("Adicionar Aluno", "AddToCourse", new { id = @course.Code })
    </p>
    <table width="100%">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RollNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fullname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mobile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Occupation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qualification)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JoinedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FeePaid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Remarks)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RollNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fullname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Mobile)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Occupation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Qualification)
                </td>
                <td>
                    @(item.JoinedOn.HasValue ? @item.JoinedOn.Value.ToString("dd/MM/yy") : "")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FeePaid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remarks)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.Id }) |

                    @Html.ActionLink("Deletar", "Delete", new { id = item.Id }, 
                               new { onclick = "return confirm('Deseja deletar este aluno ?')" }) 
                </td>
            </tr>
        }

    </table>
